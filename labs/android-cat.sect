<section id="androidlab2"><title>Laboratory: Making a Cat Go Meow!</title>

<para>
In this laboratory you will practice adding and using resources, and giving your app a very simple functionality.
</para>

<section id="android-cat-prep"><title>Preparation</title>

<para>
  Make sure you've completed and understood the reading, <ulink
  url="../readings/android-actions.html">Making Our Apps Do
  Things</ulink>.  You probably want to keep it up in a separate tab.
</para> 

</section> <!-- android-cat-prep -->

<section id="android-cat-exercises"><title>Exercises</title>

<section id="exercise1"><title>Exercise 1: Create a new Android Project</title>

<para>
  Create a new android project.  Name it <quote>Meowing Kitty</quote>.
  Follow one of the package naming conventions we've discussed in
  previous readings.
</para>

</section> <!-- exercise1 -->

<section id="exercise2"><title>Exercise 2: Gathering resources</title>

<para>
  a. Grab your favoirte picture of a cat or kitten.
</para>

<para>
  b. Download your favourite meowing noise here: <code><ulink
  url="http://soundbible.com/tags-kitten.html"/></code>.  Make sure to
  Download the mp3 version
</para>

</section> <!-- exercise2 -->

<section id="exercise3"><title>Exercise 3: Importing resources</title>

<para>
  a. You should already know where to put your image file, but make sure
  to rename it if it uses capital letters or special characters
</para>

<para>
  b. To add a sound to your resources, you have to make a new folder called &quot;raw&quot;
</para>

<para>
  c. Now drag your sound file to the folder, and rename it if neccessary
</para>

</section> <!-- exercise3 -->

<section id="exercise4"><title>Exercise 4: Using resources</title>

<para>
  a. Add your picture and a button to your application
</para>

<para>
  b. Feel free to use whatever layout you prefer, but give your layout
  elements the appropriate attributes and make sure you create the
  neccessary Strings to accompany them
</para>

<para>
  c. Using the second method we discussed in the reading for adding
  functionality to a layout element, connect you button to a method that
  displays a simple &quot;Meow&quot; message to the user when clicked
</para> 

</section> 

<!-- exercise4 -->

<section id="exercise5"><title>Exercise 5: Dealing with sound files</title>

<para>
a) As you did with the button, add an attribute to your ImageView that defines what happens when it's clicked 		
</para>

<para>
  b. The process of having a method play a sound, is very similar to the one of creating our simple message
</para>

<para>
  Replace the Toast object with a MediaPlayer. You'll need to import
  that class, or Eclipse will be upset.
</para>

<para>
  c. The method to call instead of <methodname>makeText</methodname> is 
  <methodname>create</methodname>, and its parameters are Context and
  the resource ID of the sound file
</para>

<para>
  d. If you've forgotten how to get the resource ID of a file in the res 
  folder, remember the R class (you need to omit the .mp3 part when refering 
  to the file's name)
</para>

<para>
  e. We can't really <quote>show()</quote> a MediaPlayer, but we can
  <quote>start()</quote> it
</para>

</section> <!-- exercise5 -->

<section id="exercise6"><title>Exercise 6: See your app in action</title>

<para>
  a. Save all the files, compile and run the app
</para>

<para>
  b. If it fails, talk to your mentor or instructor
</para>

</section> <!-- exercise6 -->

</section> <!-- android-cat-exercises -->

<section id="android-cat-extra"><title>For Those With Extra Time</title>

<para>
  Find a way to make the cat <emphasis>stop</emphasis> miaowing.
</para>

</section> <!-- android-cat-extra -->

</section> <!-- androidlab2 -->
